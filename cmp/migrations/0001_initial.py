# Generated by Django 4.2.5 on 2023-11-03 14:33

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="", max_length=255, unique=True)),
                ("notes", models.CharField(default="", max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="", max_length=255, unique=True)),
                ("Alpha2", models.CharField(default="", max_length=2, unique=True)),
                ("Alpha3", models.CharField(default="", max_length=3, unique=True)),
                (
                    "CountryNumber",
                    models.CharField(default="", max_length=3, unique=True),
                ),
                ("Flag", models.CharField(default="", max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="PowCamp",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(default="", max_length=255, unique=True)),
                ("nearestCity", models.CharField(default="", max_length=255)),
                ("notes", models.CharField(default="", max_length=255)),
                ("presentCountry", models.CharField(default="", max_length=255)),
                ("latitude", models.FloatField()),
                ("longitude", models.FloatField()),
                (
                    "wartimeCountry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cmp.country"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Rank",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50, unique=True)),
                ("abbreviation", models.CharField(blank=True, max_length=50)),
                (
                    "rankClass",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("OR", "Other Rank"),
                            ("NC", "Non Commisioned Officer"),
                            ("OF", "Officer"),
                        ],
                        default="Other Rank",
                        max_length=2,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Soldier",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("surname", models.CharField(default="", max_length=255)),
                ("initials", models.CharField(default="", max_length=255)),
                ("army_number", models.CharField(default="", max_length=255)),
                ("notes", models.CharField(default="", max_length=255)),
                (
                    "rank_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cmp.rank"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Theatre",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(default="", max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="SoldierImprisonment",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("powNumber", models.CharField(default="", max_length=255)),
                ("dateFrom", models.DateField()),
                ("dateTo", models.DateField()),
                ("notes", models.CharField(default="", max_length=255)),
                (
                    "company_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cmp.company"
                    ),
                ),
                (
                    "powCamp_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cmp.powcamp"
                    ),
                ),
                (
                    "soldier_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cmp.soldier"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SoldierDecoration",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(default="", max_length=255, unique=True)),
                ("notes", models.CharField(default="", max_length=255)),
                ("details_link", models.CharField(default="", max_length=255)),
                ("abbreviation", models.CharField(default="", max_length=255)),
                (
                    "country_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cmp.country"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Decoration",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(default="", max_length=255, unique=True)),
                ("notes", models.CharField(default="", max_length=255)),
                ("details_link", models.CharField(default="", max_length=255)),
                ("abbreviation", models.CharField(default="", max_length=255)),
                (
                    "country_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cmp.country"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Cemetery",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(default="", max_length=255, unique=True)),
                ("latitude", models.CharField(default="", max_length=255)),
                ("longitude", models.CharField(default="", max_length=255)),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cmp.country",
                        to_field="CountryNumber",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
    ]
